:root {
    --main-font-color: #804225f9;
    --main-bg-color: #b4f8f1;
    --second-bg-color: #babcb7e9;
    --button-border-color: #ccc; /* Default button border color */
    --info-box-border-color: #ddd; /* Default info box border color */
    font-family: 'Roboto';
}

/* Reset some default styles and set the base font and color */
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: 'Roboto';
    color: var(--main-font-color);
    background-color: var(--main-bg-color);
}

/* Define the overall layout as a flex column */
body {
    display: flex;
    flex-direction: column;
    background-image: linear-gradient(to bottom right, var(--main-bg-color), var(--second-bg-color));
}

/* Style for the header element */
header {
    background-size: cover;
    background-position: center;
    height: auto;
    text-align: center;
    color: var(--main-bg-color);
    padding: 5px;
    background-image: linear-gradient(to bottom right, var(--main-bg-color), var(--second-bg-color));
}

/* Common styles for various text elements */
.title, .subtitle {
    text-align: center;
    margin: 0;
    padding: 5px;
}

/* Styles for the main content area */
main {
    background-image: linear-gradient(to bottom right, var(--second-bg-color), var(--main-bg-color));
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center; /* Center content horizontally */
    padding: 20px; /* Add some padding for spacing */
}

/* Style for the footer */
footer {
    background-color: var(--main-bg-color);
    color: var(--main-font-color);
    text-align: center;
    padding: 0.5rem;
}

/* Style for buttons (button and elements with class button) */
button, .form-button {
    padding: 5px 10px;
    font-size: 23px;
    font-family: 'Roboto';
    width: 30%;
    border-radius: 8px;
    transition-duration: 0.4s;
    background-color: transparent;
    display: block;
    margin: 0 auto;
    color: var(--main-font-color);
    border: 1px solid var(--button-border-color); /* Use variable for button border */
}

button:hover, .form-button:hover {
    background-color: rgba(180, 248, 241, 0.25);
    color: white;
}

/* Leave the .icon class as is */
.icon {
    padding-top: 10px;
    width: 32px;
    height: 32px;
}

/* Styles for the info boxes */
.info-boxes {
    display: flex;
    justify-content: space-around;
    gap: 20px;
    margin-top: 20px;
    width: 100%;
}

.info-box, .team-member {
    flex: 1;
    padding: 20px;
    border: 1px solid var(--info-box-border-color); /* Use variable for info box border */
    border-radius: 5px;
    background-size: cover; /* Adjust as needed */
    background-position: center; /* Adjust as needed */
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    max-width: 300px;
}

.info-box h3 {
    margin-top: 0;
}

.info-box p {
    margin: 0;
}

/* Responsive Design */
@media (max-width: 768px) {
    .info-boxes {
        flex-direction: column;
        align-items: center;
    }

    .info-box {
        width: 100%;
        max-width: 600px;
    }
}

/* Pricing */
.price-container {
    display: flex;
    justify-content: space-between;
}

.price-box {
    flex: 1;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-size: cover; /* Adjust as needed */
    background-position: center; /* Adjust as needed */
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    max-width: 300px;
}

/* Scroll to top */
.scrollToTop {
    position: fixed;
    bottom: 20px;
    right: 20px;
    font-size: 24px;
    text-decoration: none;
    color: var(--main-font-color);
}

.team-member {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center; /* Add this line to center the content horizontally */
    margin: auto;
}

/* Step 1: Define the animation keyframes */
@keyframes slideIn {
    0% {
      transform: translateX(-100px); /* Start from -100px off-screen to the left */
      opacity: 0; /* Start from fully transparent */
      visibility: hidden; /* Start as invisible */
    }
    1% {
      visibility: visible; /* Make the element visible as soon as the animation starts */
    }
    100% {
      transform: translateX(0); /* End at the element's final position */
      opacity: 1; /* Fully visible */
      visibility: visible; /* Ensure it stays visible after animation */
    }
}
